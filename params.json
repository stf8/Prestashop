{"google":"","tagline":"Prestashop fork + addons","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Prestashop","body":"# Addons for Prestashop\r\n\r\nThis fork supports small addons to [Prestashop](http://www.prestashop.com) :\r\n* new hooks in the backoffice import controller;\r\n* background bulk CSV import.\r\n\r\n## How to apply\r\nIf you don't already have your very own Prestashop running then you can get a patched Prestashop by clicking the links at top of the page.\r\n\r\nAlternatively you can apply a [single patch](https://github.com/stf8/Prestashop/commit/22cebb8c682cbe3cd227766ecc5e86517439a123.patch) to your 1.5.2 tree (only this release is provided).\r\n\r\n    prestashop$ patch -p1 < /x/y/z/where/is/the/patch.file\r\n## Features \r\n\r\n### Bulk import\r\n\r\nThis video shows a product import :\r\n\r\n\r\n### Additional import fields\r\n\r\nThe new hook `importFields` allows a modification of the supported import fields...  It is typically used by a 'dimensions' module that adds the ability to define true custom dimensions for any product in Prestashop (soon to be publish on GitHub).\r\n\r\n## Special notes\r\n\r\nI didn't use override since most of modification occurs in the middle of pretty critical methods this would have lead to duplicate most of those methods. \r\n\r\nThere is one recurrent problem in using overrides : array defininition in methods (e.g. render_form). Most of time you will see :\r\n\r\n    $this->an_array = array( 'x' => 'y');\r\n\r\nWhile one should expect a way to merge a possible predefined array (typically from within the override) :\r\n\r\n    public function render_form() {\r\n      $this->an_array = array( 'foo' => 'bar' );\r\n      parent::render_form();\r\n    }\r\n\r\nWhatever, the patch is pretty easy to apply.\r\n\r\n***\r\n\r\nFeel free to contact me.\r\n"}